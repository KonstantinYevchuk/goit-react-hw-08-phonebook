{"version":3,"file":"static/js/874.0882c0b1.chunk.js","mappings":"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","sources":["components/Form/Form.styled.js","components/Form/Form.jsx","redux/selectors.js","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/App.styled.js","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FormContainer = styled.form`\n    padding: 25px 15px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 20px;\n    border: 1px solid black;\n    border-radius: 5px;\n    width: 340px;\n`;\nexport const Label = styled.label`\n    font-size: 18px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 300px;\n    text-align: start;\n    border-radius: 5px;\n    margin: 0 auto 15px auto;\n    font-weight: 500;\n`;\nexport const Input = styled.input`\n    padding: 8px 12px;\n    margin-top: 8px;\n    font-size: 16px;\n    border-radius: 5px;\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n\n    &:hover,\n    &:focus {\n        border-color: blue;\n        box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n\n    } \n`;\nexport const Btn = styled.button`\n    font-size: 16px;\n    padding: 5px 15px;\n    color: white;\n    background-color: blue;\n    cursor: pointer;\n    border: 1px solid transparent;\n    border-radius: 5px;\n    outline: none;\n    transition: all 300ms ease-in-out;\n    \n    &:hover,\n    &:focus {\n        transform: scale(1.15);\n        background-color: orange; \n    }\n`\n","import { useDispatch } from \"react-redux\";\nimport { addContact } from \"redux/operations\";\n// import { getContacts } from \"redux/selectors\";\n// import { useState } from 'react';\n\nimport { FormContainer, Label, Input, Btn } from './Form.styled';\n\nexport const Form = () => {\n    const dispatch = useDispatch();\n    // const contacts = useState(getContacts)\n    const formSubmit = event => {\n      event.preventDefault();\n      const form = event.target;\n     \n      // contacts.some(contact => {\n      //   contact.name === form.name.value ? alert(`oopps`)})\n      dispatch(addContact({\n        name: form.elements.name.value,\n        number: form.elements.number.value\n      }));\n      form.reset()\n    };\n  \n        return (\n            <div>\n              <FormContainer onSubmit={formSubmit}>\n              <Label> Name\n               <Input \n               type=\"text\"\n               name=\"name\"\n              //  value={name}\n               pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n               title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n               required\n              //  onChange={handleChange}\n               /> \n              </Label>\n              <Label>Number\n              <Input\n              type=\"tel\"\n              name=\"number\"\n              // value={number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              // onChange={handleChange}\n              />\n              </Label>\n              <Btn type=\"submit\">Add contact</Btn>\n              </FormContainer> \n            </div>\n          );\n    \n}\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.filters.status;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;","import styled from '@emotion/styled';\n\n\nexport const List = styled.ol`\n    padding: 20px 0;\n    font-size: 18px;\n    width: 300px;\n    margin-left: auto;\n    margin-right: auto;\n`;\nexport const Item = styled.li`\n    margin-bottom: 10px;\n    display: flex;\n    gap: 5px;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nexport const Button = styled.button`\n    display: flex;\n    justify-content: center;\n    padding: 5px 7px;\n    min-width: 70px;\n    color: white;\n    background-color: blue;\n    cursor: pointer;\n    border: 1px solid transparent;\n    border-radius: 5px; \n    outline: none;\n    transition: all 300ms ease-in-out;\n    \n    &:hover,\n    &:focus {\n        transform: scale(1.1);\n        background-color: orange;\n     \n    }\n    /* &:active {\n        justify-content: space-between;\n        align-items: center;\n    } */\n`","\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getIsLoading } from \"redux/selectors\";\nimport { Loader } from \"components/Loader/Loader\";\n// import { deleteContact } from 'redux/contactsSlice';\nimport { deleteContact } from \"redux/operations\";\nimport { Button } from './Contact.styled';\n\nexport const Contact = ({contact}) => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(getIsLoading)\n    const handleDelete = () => dispatch(deleteContact(contact.id));\n    return (\n        <>\n            {contact.name}: {contact.number}\n            <Button type=\"button\" onClick={handleDelete} >\n            {isLoading && <Loader size={5}/>  }\n                Delete\n                </Button>\n        </>    \n    )\n}","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n    padding-top: 50px;\n    padding-bottom: 50px;\n    text-align: center;\n`;\nexport const MainTitle = styled.h1`\n    margin-bottom: 20px;\n    font-size: 38px;\n    \n`;\nexport const Title = styled.h2`\n    margin-bottom: 20px;\n    font-size: 32px;\n`;\nexport const ErrorText = styled.h3`\n    color: red;\n    animation: beat 1s infinite;\n    transition: all 300ms ease-in-out;\n   \n@keyframes beat {\n  0%\n  {\n    color: black;\n  }\n  50%\n  {\n    color: red;\n  }\n  50%\n  {\n    color: black;\n  }\n  100%\n  {\n    color: red;\n  }\n}\n` ","import styled from '@emotion/styled';\n\n\nexport const List = styled.ol`\n    padding: 20px 0;\n    font-size: 18px;\n    width: 300px;\n    margin-left: auto;\n    margin-right: auto;\n`;\nexport const Item = styled.li`\n    margin-bottom: 10px;\n    display: flex;\n    gap: 5px;\n    justify-content: space-between;\n    align-items: center;\n`;\n\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { fetchContacts } from \"redux/operations\";\nimport { getContacts, getFilter } from 'redux/selectors';\nimport { useEffect } from \"react\";\nimport { Contact } from 'components/Contact/Contact';\nimport { ErrorText } from \"components/App.styled\";\n\nimport { List, Item } from './ContactsList.styled';\nimport { getIsLoading } from \"redux/selectors\";\nimport { Loader } from \"components/Loader/Loader\";\n\n\n\nexport const ContactsList = () => {\n    const contacts = useSelector(getContacts);\n    const filter = useSelector(getFilter);\n    const dispatch = useDispatch();\n    const isLoading = useSelector(getIsLoading)\n    \n    useEffect(() => {\n        dispatch(fetchContacts());\n      }, [dispatch]);\n      \n    const filteredContacts = contacts.filter(contact => \n    contact.name.toLowerCase().includes(filter.toLowerCase()));\n    return (\n        <List>\n            {isLoading && <Loader />}\n        {contacts.length > 0 ? filteredContacts.map(contact => {\n        return <Item key={contact.id}>\n            <Contact contact={contact} />\n            </Item>    \n        }  \n        ) : <ErrorText>Sorry! No contacts in phonebook!</ErrorText>}   \n        </List>        \n    ) \n}\n\n// ContactsList.propTypes = {\n//     contacts: PropTypes.arrayOf(PropTypes.exact({\n//         id: PropTypes.string.isRequired,\n//         name: PropTypes.string.isRequired,\n//         number: PropTypes.string.isRequired\n//     }).isRequired).isRequired\n// }","import styled from '@emotion/styled';\n\nexport const FilterContainer = styled.div`\n    padding: 20px 20px;\n`","import { FilterContainer } from \"./Filter.styled\";\nimport { Label, Input } from \"components/Form/Form.styled\";\nimport { useDispatch } from \"react-redux\";\nimport { setStatusFilter } from \"redux/contactsFilter\";\n\nexport const Filter = () => {\n\n    const dispatch = useDispatch(); \n    const filterInput = e => {\n      const { value } = e.currentTarget;\n      dispatch(setStatusFilter(value))\n    }\n    return (\n        <FilterContainer>\n        <Label>Find Contacts By Name\n        <Input type=\"text\" onChange={filterInput}/>\n        </Label>\n        </FilterContainer>\n    )\n}","// import { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { Form } from 'components/Form/Form';\nimport { ContactsList } from 'components/ContactsList/ContactsList'; \nimport { Filter } from 'components/Filter/Filter'; \nimport { Container, MainTitle, Title } from 'components/App.styled';\n// import { TaskList } from 'components/TaskList/TaskList';\n// import { TaskEditor } from 'components/TaskEditor/TaskEditor';\n// import { fetchTasks } from 'redux/tasks/operations';\n// import { selectLoading } from 'redux/tasks/selectors';\n\nexport default function Contacts() {\n \n  return (\n    <>\n      <Helmet>\n        <title>Your Contacts</title>\n      </Helmet>\n      <Container>\n        <MainTitle>Phonebook</MainTitle>\n        <Form />\n        <Title> Contacts</Title>\n          <Filter />\n          <ContactsList /> \n      </Container> \n      {/* <TaskEditor /> */}\n      {/* <div>{isLoading && 'Request in progress...'}</div> */}\n      {/* <TaskList /> */}\n    </>\n  );\n}\n"],"names":["FormContainer","styled","Label","Input","Btn","Form","dispatch","useDispatch","onSubmit","event","preventDefault","form","target","addContact","name","elements","value","number","reset","type","pattern","title","required","getContacts","state","contacts","items","getFilter","filters","status","getIsLoading","isLoading","Button","Contact","contact","useSelector","onClick","deleteContact","id","Loader","size","Container","MainTitle","Title","ErrorText","List","Item","ContactsList","filter","useEffect","fetchContacts","filteredContacts","toLowerCase","includes","length","map","FilterContainer","Filter","onChange","e","currentTarget","setStatusFilter","Contacts","Helmet"],"sourceRoot":""}